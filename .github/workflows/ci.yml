name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  # Minimum line coverage required for CI to pass (used by coverage job)
  MIN_COVERAGE: "80"

jobs:
  test:
    name: Test (unit + integration)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build
      run: cargo build --verbose
      
    - name: Run unit/integration tests (exclude smoke on macOS)
      run: |
        if [[ "${{ runner.os }}" == "macOS" ]]; then
          cargo test --verbose -- --test-threads=1 --skip smoke_basic
        else
          cargo test --verbose -- --test-threads=1 --skip smoke_basic
        fi
      
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets -- -D warnings

  smoke:
    name: Smoke tests (ubuntu)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry and target
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build
      run: cargo build --verbose

    - name: Run smoke tests only
      run: cargo test --verbose --test smoke_basic -- --test-threads=1

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets -- -D warnings

  coverage:
    name: Coverage (ubuntu)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-llvm-cov

    - name: Cache cargo registry and target
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-llvmcov-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-llvmcov-

    - name: Generate coverage (fail under ${{ env.MIN_COVERAGE }}%)
      run: |
        mkdir -p coverage
        cargo llvm-cov --workspace --lcov --output-path coverage/lcov.info --text --fail-under-lines ${{ env.MIN_COVERAGE }} -- --test-threads=1 | tee -a "$GITHUB_STEP_SUMMARY"

    - name: Upload lcov artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-lcov
        path: coverage/lcov.info