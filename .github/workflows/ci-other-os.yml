name: CI (Other OS)

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint (fmt + clippy) (${{ matrix.os }})
    runs-on: ${{ matrix.runs_on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos
            runs_on: macos-13
          - os: windows
            runs_on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Rust CI steps (lint)
      uses: ./.github/actions/rust-ci-steps
      with:
        job-type: lint
        os-name: ${{ matrix.os }}

  test:
    name: Test (unit + integration) (${{ matrix.os }})
    needs: lint
    runs-on: ${{ matrix.runs_on }}
    timeout-minutes: 45
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos
            runs_on: macos-13
          - os: windows
            runs_on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Rust CI steps (checkout + toolchain + cache)
      uses: ./.github/actions/rust-ci-steps
      with:
        job-type: test
        os-name: ${{ matrix.os }}

    - name: Install and start Docker (macOS via Colima)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install docker colima
        colima start --runtime docker --cpu 2 --memory 4 --disk 60
        docker context use colima
        docker info

    - name: Install Docker Compose plugin (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        set -euo pipefail
        mkdir -p ~/.docker/cli-plugins
        if ! docker compose version >/dev/null 2>&1; then
          echo "Installing Docker Compose v2 plugin..."
          COMPOSE_VERSION="v2.29.7"
          curl -sSL -o ~/.docker/cli-plugins/docker-compose \
            "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-darwin-x86_64"
          chmod +x ~/.docker/cli-plugins/docker-compose
        fi
        docker compose version

    - name: Set macOS TMPDIR for Colima mounts
      if: runner.os == 'macOS'
      shell: bash
      run: |
        mkdir -p "$RUNNER_TEMP"
        echo "TMPDIR=$RUNNER_TEMP" >> "$GITHUB_ENV"
        echo "TMP=$RUNNER_TEMP" >> "$GITHUB_ENV"
        echo "TEMP=$RUNNER_TEMP" >> "$GITHUB_ENV"
        echo "Using TMPDIR=$RUNNER_TEMP"

  smoke:
    name: Smoke tests (${{ matrix.os }})
    needs: lint
    runs-on: ${{ matrix.runs_on }}
    continue-on-error: ${{ matrix.os == 'windows' }}
    timeout-minutes: 45
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos
            runs_on: macos-13
          - os: windows
            runs_on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Rust CI steps (checkout + toolchain + cache)
      uses: ./.github/actions/rust-ci-steps
      with:
        job-type: smoke
        os-name: ${{ matrix.os }}

    - name: Install and start Docker (macOS via Colima)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install docker colima
        colima start --runtime docker --cpu 2 --memory 4 --disk 60
        docker context use colima
        docker info

    - name: Install Docker Compose plugin (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        set -euo pipefail
        mkdir -p ~/.docker/cli-plugins
        if ! docker compose version >/dev/null 2>&1; then
          echo "Installing Docker Compose v2 plugin..."
          COMPOSE_VERSION="v2.29.7"
          curl -sSL -o ~/.docker/cli-plugins/docker-compose \
            "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-darwin-x86_64"
          chmod +x ~/.docker/cli-plugins/docker-compose
        fi
        docker compose version