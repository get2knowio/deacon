name: maverick-intake-poller

# Polls for items in the "Ready for Takeoff" status and moves them to "In Flight".
# Creates a Copilot agent task and (optionally) posts a kickoff comment.

on:
  # Scheduled polling interval. Adjust the cron as needed.
  # schedule:
  #   - cron: "*/5 * * * *"
  # Allow manual dispatch to run on demand.
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  # Organization and project configuration. Update these values to your org and project.
  ORG: get2knowio
  PROJECT_NUMBER: "1"
  # Status option names. These should match the names (including emoji) of your project Status field.
  STATUS_READY: "Ready for Takeoff"
  STATUS_INFLIGHT: "In Flight"
  # Comment posted to kick off Copilot work. Customize as needed.
  COPILOT_KICKOFF: "@copilot please start working on this issue"

jobs:
  intake:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Configure gh CLI authentication
        env:
          GH_OAUTH_TOKEN: ${{ secrets.GH_OAUTH_TOKEN }}
          GH_OAUTH_USER: ${{ secrets.GH_OAUTH_USER }}
        run: |
          mkdir -p ~/.config/gh
          cat > ~/.config/gh/hosts.yml <<EOF
          github.com:
              git_protocol: https
              users:
                  ${GH_OAUTH_USER}:
                      oauth_token: ${GH_OAUTH_TOKEN}
              user: ${GH_OAUTH_USER}
              oauth_token: ${GH_OAUTH_TOKEN}
          EOF
          cat > ~/.config/gh/config.yml <<'CONFIGEOF'
          version: 1
          git_protocol: https
          editor:
          prompt: enabled
          prefer_editor_prompt: disabled
          pager:
          aliases:
              co: pr checkout
          http_unix_socket:
          browser:
          CONFIGEOF
          chmod 600 ~/.config/gh/hosts.yml
          chmod 644 ~/.config/gh/config.yml

      - name: Run intake poller
        env:
          GH_PAT: ${{ secrets.ORG_PROJECTS_TOKEN }}
          # Make sure the bot/script can read GH_TOKEN (script expects GH_TOKEN)
          GH_TOKEN: ${{ secrets.ORG_PROJECTS_TOKEN }}
          # Also set GITHUB_TOKEN so `gh` CLI (and other tools) can pick up the token
          GITHUB_TOKEN: ${{ secrets.ORG_PROJECTS_TOKEN }}
          ORG: ${{ env.ORG }}
          PROJECT_NUMBER: ${{ env.PROJECT_NUMBER }}
          STATUS_READY: ${{ env.STATUS_READY }}
          STATUS_INFLIGHT: ${{ env.STATUS_INFLIGHT }}
          COPILOT_KICKOFF: ${{ env.COPILOT_KICKOFF }}
        run: |
          # Verify token is available (the poller expects GH_TOKEN)
          if [ -z "$GH_TOKEN" ]; then
            echo "ERROR: GH_TOKEN is not set"
            echo "This workflow requires an OAuth token with the following scopes:"
            echo "  - repo (full control)"
            echo "  - read:org, write:org (for Projects v2)"
            exit 1
          fi

          # Now run the poller (GH_TOKEN will be in the environment for the script)
          python .github/workflow-scripts/maverick/intake_poller.py
